tags:
- name: auth
  description: Auth API
- name: users
  description: users API

paths:
# [POST] signup
  /auth/signup:
    post:
      tags:
      - auth
      summary: Signup User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'


# definitions
definitions:
  users:
    type: object
    required:
        - name
        - email
        - password
    properties:
      name:
        type: string
        description: user name
        example: Ifeanyi Nnorom
      email:
        type: string
        description: user Email
        example: email@example.com
      password:
        type: string
        description: user Password
        example: Pa$$word1

schemes:
 - https
 - http
